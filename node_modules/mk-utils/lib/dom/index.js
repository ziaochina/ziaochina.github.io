'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getCursorPosition(target) {
    var oTxt1 = target;
    var cursorPosition = -1;

    if (oTxt1.selectionStart != undefined) {
        //非IE浏览器
        cursorPosition = oTxt1.selectionStart;
    } else {
        //IE
        if (document.selection) {
            var range = document.selection.createRange();
            range.moveStart("character", -oTxt1.value.length);
            cursorPosition = range.text.length;
        }
    }
    return cursorPosition;
}

function gridCellAutoFocus(container, editCtrlClassName) {
    var editorDOM = _reactDom2.default.findDOMNode(container).querySelector(editCtrlClassName);
    if (!editorDOM) return;

    if (editorDOM.className.indexOf('input') != -1) {
        editorDOM.select();
        return;
    }

    if (editorDOM.className.indexOf('select') != -1) {
        editorDOM.click();
        return;
    }

    if (editorDOM.className.indexOf('datepicker') != -1) {
        var input = editorDOM.querySelector('input');
        input.click();
        return;
    }

    if (editorDOM.className.indexOf('checkbox') != -1) {
        var _input = editorDOM.querySelector('input');
        _input.focus();
        return;
    }
}

function cursorAtEnd(e) {
    var selectedText = window.getSelection().toString(),
        cursorPosition = getCursorPosition(e.target);

    return !e.target.value || selectedText && selectedText.length == e.target.value.length || cursorPosition == e.target.value.length || cursorPosition == -1 || e.target.className && e.target.className.indexOf('picker') != -1;
}

function cursorAtBegin(e) {
    var selectedText = window.getSelection().toString(),
        cursorPosition = getCursorPosition(e.target);

    return !e.target.value || selectedText && selectedText.length == e.target.value.length || cursorPosition == 0 || cursorPosition == -1 || e.target.className && e.target.className.indexOf('picker') != -1;
}

exports.default = {
    getCursorPosition: getCursorPosition,
    gridCellAutoFocus: gridCellAutoFocus,
    cursorAtEnd: cursorAtEnd,
    cursorAtBegin: cursorAtBegin
};
module.exports = exports['default'];