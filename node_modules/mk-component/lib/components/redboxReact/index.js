'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _mkRedboxReact = require('mk-redbox-react');

var _mkRedboxReact2 = _interopRequireDefault(_mkRedboxReact);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var STYLE = {
	redbox: {
		boxSizing: 'border-box',
		fontFamily: 'sans-serif',
		position: 'relative',
		padding: 10,
		top: '0px',
		left: '0px',
		bottom: '0px',
		right: '0px',
		width: '100%',
		background: 'rgb(204, 0, 0)',
		color: 'white',
		zIndex: 2147483647,
		textAlign: 'left',
		fontSize: '16px',
		lineHeight: 1.2,
		overflow: 'auto'
	},
	message: {
		fontWeight: 'bold'
	},
	stack: {
		fontFamily: 'monospace',
		marginTop: '2em'
	},
	frame: {
		marginTop: '1em'
	},
	file: {
		fontSize: '0.8em',
		color: 'rgba(255, 255, 255, 0.7)'
	},
	linkToFile: {
		textDecoration: 'none',
		color: 'rgba(255, 255, 255, 0.7)'
	}
};

function RedboxReactComponent(props) {
	var className = (0, _classnames2.default)((0, _defineProperty3.default)({
		'mk-redbox-react': true
	}, props.className, !!props.className));
	return _react2.default.createElement(_mkRedboxReact2.default, (0, _extends3.default)({}, props, { className: className }));
}

function RedBoxErrorComponent(props) {
	var className = (0, _classnames2.default)((0, _defineProperty3.default)({
		'mk-redbox-error': true
	}, props.className, !!props.className));

	var style = STYLE;
	var error = {};
	if (!props.error) {
		error.stack = '';
	}
	if (typeof props.error == 'string') {
		error.stack = props.error;
	} else if (!props.error.stack && props.error.message) {
		error.stack = props.error.message;
	} else {
		error = props.error;
	}

	if (props.style) {
		style = (0, _extends3.default)({}, style, props.style);
	}

	return _react2.default.createElement(_mkRedboxReact.RedBoxError, (0, _extends3.default)({}, props, { className: className, style: style, error: error }));
}

RedboxReactComponent.RedBoxError = RedBoxErrorComponent;

exports.default = RedboxReactComponent;
module.exports = exports['default'];